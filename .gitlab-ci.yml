stages:
  - build
  - test
  - deploy

build_backend:
  stage: build
  image: maven:3.8-openjdk-17
  script:
    - cd Back-End
    - cd backend-pi
    - echo "Building app..."
    - mvn package
    - echo "Compile complete."
  artifacts:
    paths:
      - backend-pi/target/backend-pi.0.0.1-SNAPSHOT.jar

build_frontend:
  stage: build
  image: node:latest
  script:
    - echo "Building the app"
    - cd Front-End
    - npm --force install
    - CI=false npm run build
    - echo "Finished building the app."
  artifacts:
    paths:
      - ./Front-End/dist/

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy_frontend:
   stage: deploy
   needs: [build_frontend]
   image: python:latest 
   script:
      - cd Front-End/dist
      - pip install awscli   
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws configure list
      - aws s3 sync /builds/ctd/hispanos/proyecto-integrador-1/proyecto-integrador-0523/0822ft-c1/equipo-3/Front-End/dist s3://bucket-fieldrent-front
   rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always 

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
